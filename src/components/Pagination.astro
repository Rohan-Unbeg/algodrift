---
interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
}

const { currentPage, totalPages, baseUrl } = Astro.props;

// Calculate the range of pages to show
const showPages = 5;
const startPage = Math.max(1, currentPage - Math.floor(showPages / 2));
const endPage = Math.min(totalPages, startPage + showPages - 1);

// Generate page numbers to display
const pageNumbers = Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);

// Build URLs for navigation
const prevUrl = currentPage > 1 ? `${baseUrl}${currentPage - 1 === 1 ? '' : '/' + (currentPage - 1)}` : null;
const nextUrl = currentPage < totalPages ? `${baseUrl}/${currentPage + 1}` : null;
---

{totalPages > 1 && (
  <nav aria-label="Pagination" class="flex justify-center mt-12">
    <ul class="flex items-center space-x-1">
      <!-- Previous page -->
      <li>
        {prevUrl ? (
          <a 
            href={prevUrl}
            class="px-3 py-2 rounded-md border border-gray-300 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-800 text-gray-700 dark:text-gray-300 transition-colors"
            aria-label="Go to previous page"
          >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
            </svg>
          </a>
        ) : (
          <span 
            class="px-3 py-2 rounded-md border border-gray-200 dark:border-gray-800 text-gray-400 dark:text-gray-600 cursor-not-allowed"
            aria-disabled="true"
          >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
            </svg>
          </span>
        )}
      </li>
      
      <!-- Page numbers -->
      {pageNumbers.map(page => (
        <li>
          <a 
            href={page === 1 ? baseUrl : `${baseUrl}/${page}`}
            class={`px-4 py-2 rounded-md border transition-colors ${
              page === currentPage 
                ? 'bg-primary-600 border-primary-600 text-white' 
                : 'border-gray-300 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-800 text-gray-700 dark:text-gray-300'
            }`}
            aria-current={page === currentPage ? 'page' : undefined}
          >
            {page}
          </a>
        </li>
      ))}
      
      <!-- Next page -->
      <li>
        {nextUrl ? (
          <a 
            href={nextUrl}
            class="px-3 py-2 rounded-md border border-gray-300 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-800 text-gray-700 dark:text-gray-300 transition-colors"
            aria-label="Go to next page"
          >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
            </svg>
          </a>
        ) : (
          <span 
            class="px-3 py-2 rounded-md border border-gray-200 dark:border-gray-800 text-gray-400 dark:text-gray-600 cursor-not-allowed"
            aria-disabled="true"
          >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
            </svg>
          </span>
        )}
      </li>
    </ul>
  </nav>
)}